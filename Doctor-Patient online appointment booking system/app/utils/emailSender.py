import os
import random
from email.mime.image import MIMEImage

from flask_mail import Message
import schedule
from tabulate import tabulate

from app.controller.adminController import emailSendAsTableFormat
# from app.controller.patientController import check_for_PMR_beforeDay
from run import mail, UPLOAD_FOLDER

import time
sender='sharshini2003@gmail.com'

def send_appointment_confirmation_email(doctor_email, patient_email, appointment_date, appointment_time):

    subject = 'Appointment Request Confirmation'
    body = f"Dear Doctor, \n\nPatient {patient_email} has requested an appointment on {appointment_date} at {appointment_time}."
    message = Message(subject, sender=sender, recipients=[doctor_email], body=body)
    mail.send(message)

def send_appointment_Status(doctor_email, patient_email, appointment_date, appointment_time, appointmentStatus):
    subject = 'Appointment Status - Information'
    body = f"Dear Patient, \n\nDoctor {doctor_email} has responded to your appointment request on {appointment_date} at {appointment_time}.\n\nAPPOINTMENT STATUS: {appointmentStatus}"
    message = Message(subject, sender=sender, recipients=[patient_email], body=body)
    mail.send(message)

def send_PMR_Report(doctor_email, patient_email,appointment_time,PMReport,appointment_date,description):
    subject ='PMR - REPORT ADDED'
    body =(f'Dear Doctor,\n\nPatient {patient_email}, has added PMR - REPORT for appointment on {appointment_date} at {appointment_time}.\n\n'
           f'PMR REPORT :{PMReport}\n\nDescription :{description}')
    message =Message(subject,sender=sender,recipients=[doctor_email],body=body)
    mail.send(message)

def send_email(to_email):
    subject = 'PMR report To Be added: Reminder'
    body = 'Your appointment is scheduled for tommorrow. Please remember to add PMR report.\n\nNOTE:This is an autogenerated mail.\n\nDo not Reply or Respond to this mail'
    message = Message(subject, sender=sender,recipients=[to_email], body=body)
    mail.send(message)

def send_email_ad(emailId):
    subject = 'An Apple a day Keep the DOCTOR away'
    body = 'Healthy Remainder'
    filepath = os.path.join(UPLOAD_FOLDER, 'ad_01.png')
    message = Message(subject, sender=sender, recipients=[emailId], body=body)

    from flask import current_app
    with current_app.open_resource(filepath) as image_file:
        message.attach("image.png", "image/png", image_file.read())
    mail.send(message)

def emailSendAsTable():
    data = emailSendAsTableFormat()
    subject = 'Doctor info - Tabulation'
    body = generate_html_table(data)
    message = Message(subject, sender=sender, recipients=["sharshini2003@gmail.com"], html=body)
    mail.send(message)


def generate_html_table(data):
    table_html = "<table border='1'>"
    headers = data[0].keys() if data else []

    table_html += "<tr>"
    for header in headers:
        table_html += f"<th>{header}</th>"
    table_html += "</tr>"

    for row in data:
        table_html += "<tr>"
        for value in row.values():
            table_html += f"<td>{value}</td>"
        table_html += "</tr>"

    table_html += "</table>"
    return table_html

global_otp = None
global_Email = None
def generate_otp():
    return str(random.randint(10000, 99999))

def otpSending(EmailId):
    OTP=generate_otp()
    global_otp=OTP
    global_Email=EmailId
    subject ='OTP Verification'
    body = f'Your OTP is: {OTP}. \n This is to verify your account for FORGOT-PASSWORD-VERIFICATION. \n\n Note: This is an auto-generated mail. Don\'t reply to this email.'
    message = Message(subject, sender=sender,recipients=[EmailId], body=body)
    mail.send(message)
    return global_otp,global_Email



