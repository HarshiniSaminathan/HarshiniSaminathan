from flask_mail import Message
import schedule
from app.controller.patientController import check_for_PMR_beforeDay
from run import mail
import time
sender='sharshini2003@gmail.com'

def send_appointment_confirmation_email(doctor_email, patient_email, appointment_date, appointment_time):

    subject = 'Appointment Request Confirmation'
    body = f"Dear Doctor, \n\nPatient {patient_email} has requested an appointment on {appointment_date} at {appointment_time}."
    message = Message(subject, sender=sender, recipients=[doctor_email], body=body)
    mail.send(message)

def send_appointment_Status(doctor_email, patient_email, appointment_date, appointment_time, appointmentStatus):
    subject = 'Appointment Status - Information'
    body = f"Dear Patient, \n\nDoctor {doctor_email} has responded to your appointment request on {appointment_date} at {appointment_time}.\n\nAPPOINTMENT STATUS: {appointmentStatus}"
    message = Message(subject, sender=sender, recipients=[patient_email], body=body)
    mail.send(message)
def send_PMR_Report(doctor_email, patient_email,appointment_time,PMReport,appointment_date,description):
    subject ='PMR - REPORT ADDED'
    body =(f'Dear Doctor,\n\nPatient {patient_email}, has added PMR - REPORT for appointment on {appointment_date} at {appointment_time}.\n\n'
           f'PMR REPORT :{PMReport}\n\nDescription :{description}')
    message =Message(subject,sender=sender,recipients=[doctor_email],body=body)
    mail.send(message)

def send_email(to_email):
    from app.controller.patientController import check_for_PMR_beforeDay
    subject = 'PMR report To Be added: Reminder'
    body = 'Your appointment is scheduled for tomorrow. Please remember to add PMR report.\n\nThis is an autogenerated Email.\n\nDo not Reply or Respond to this Email'
    message = Message(subject, sender=sender,recipients=[to_email], body=body)
    mail.send(message)




